#!/bin/bash

# This script intends to simplify launching, configuring and joining a set of 
# Couchbase Server instances running in Docker containers on a single physical host
# into a cluster.
# Configuration happens via environment variables taken from the runtime environment,
# redirected input, or provided on the command line.

Usage() {
  echo "Usage: $0 [VAR=value] ... [< file]"
}

# Read configuration from stdin when redirected (e.g. $0 < config)
[[ ! -t 0 ]] && source /dev/stdin

# Override configuration based on supplied arguments
until [ -z "$1" ]
do
  [[ "$1" =~ ^[^=]+=[^=]+$ ]] || { echo Malformed argument "$1"; Usage; exit 1; }
  eval "$1" || { echo Failed processing argument "$1"; Usage; exit 1; }
  shift
done

# Use supplied parameters or try for sensible defaults
: ${DOCKER:=docker}
: ${COUCHBASE_NETWORK:=cbnetwork}
: ${COUCHBASE_NODE_NAME:=cbserver}
: ${COUCHBASE_NODE_COUNT:=1}
: ${COUCHBASE_CLUSTER_NAME:=cluster}
: ${COUCHBASE_BUCKET:=default}
: ${COUCHBASE_ADMINISTRATOR_USERNAME:?Please supply an administrator username}
: ${COUCHBASE_ADMINISTRATOR_PASSWORD:?Please supply an administrator password}
: ${COUCHBASE_RBAC_USERNAME:?Please supply an RBAC username}
: ${COUCHBASE_RBAC_PASSWORD:?Please supply an RBAC password}
: ${COUCHBASE_RBAC_NAME:=}
: ${COUCHBASE_RBAC_ROLES:="bucket_admin[*]"}
: ${COUCHBASE_SERVICES:="data,index,query,fts,analytics"}
: ${COUCHBASE_SERVER_PORTS:="8091-8094:8091-8094::11210:11210"}
: ${COUCHBASE_DOCKER_TAG:=latest}

cluster_url="couchbase://127.0.0.1"

read -r -d '' ports_script << EOF || true
{
  split(\$1, maps, /::/)

  for (map in maps) {
    split(maps[map], ranges, /:/)
    count = split(ranges[1], ports, "-")
     
    for (port in ports) {
      ports[port] += offset
    }
     
    ranges[1] = ports[1]
    
    if (count > 1) ranges[1] = ports[1] "-" ports[2]
    
    printf "-p " ranges[1] ":" ranges[2] " "
  }
}
EOF

for ((node = 0; node < $COUCHBASE_NODE_COUNT; ++node))
do
  echo "Starting node ${COUCHBASE_NODE_NAME}_${node}"
  let offset=${node}*1000 || true
  ports=$(awk -v offset=$offset "$ports_script" <<< "${COUCHBASE_SERVER_PORTS}")
  "$DOCKER" run -d --name "${COUCHBASE_NODE_NAME}_${node}" --network "$COUCHBASE_NETWORK" $ports couchbase/server:${COUCHBASE_DOCKER_TAG}
done

sleep 15

# Setup initial cluster/initialize node
"$DOCKER" exec "${COUCHBASE_NODE_NAME}_0" couchbase-cli cluster-init --cluster ${cluster_url} --cluster-name "$COUCHBASE_CLUSTER_NAME" \
  --cluster-username "$COUCHBASE_ADMINISTRATOR_USERNAME" --cluster-password "$COUCHBASE_ADMINISTRATOR_PASSWORD" \
  --services ${COUCHBASE_SERVICES} --cluster-ramsize 256 --cluster-analytics-ramsize 1024 \
  --cluster-index-ramsize 256 --cluster-fts-ramsize 256 --index-storage-setting default

# Setup Bucket
"$DOCKER" exec "${COUCHBASE_NODE_NAME}_0" couchbase-cli bucket-create --cluster ${cluster_url} \
  --username "$COUCHBASE_ADMINISTRATOR_USERNAME" --password "$COUCHBASE_ADMINISTRATOR_PASSWORD" \
  --bucket "$COUCHBASE_BUCKET" --bucket-type couchbase --bucket-ramsize 100

# Setup RBAC user using CLI
"$DOCKER" exec "${COUCHBASE_NODE_NAME}_0" couchbase-cli user-manage --cluster ${cluster_url} \
  --username "$COUCHBASE_ADMINISTRATOR_USERNAME" --password "$COUCHBASE_ADMINISTRATOR_PASSWORD" \
  --set --rbac-username "$COUCHBASE_RBAC_USERNAME" --rbac-password "$COUCHBASE_RBAC_PASSWORD" \
  --rbac-name "$COUCHBASE_RBAC_NAME" --roles "$COUCHBASE_RBAC_ROLES" --auth-domain local

# Add nodes
docker_ip() {
  "$DOCKER" inspect --format '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' "$@"
}

for ((node = 1; node < $COUCHBASE_NODE_COUNT; ++node))
do  
  "$DOCKER" exec "${COUCHBASE_NODE_NAME}_${node}" couchbase-cli server-add \
    --cluster $(docker_ip "${COUCHBASE_NODE_NAME}_0"):8091 \
    --username "$COUCHBASE_ADMINISTRATOR_USERNAME" --password "$COUCHBASE_ADMINISTRATOR_PASSWORD" \
    --server-add $(docker_ip "${COUCHBASE_NODE_NAME}_${node}"):8091 \
    --server-add-username "$COUCHBASE_ADMINISTRATOR_USERNAME" --server-add-password "$COUCHBASE_ADMINISTRATOR_PASSWORD" \
    --services "$COUCHBASE_SERVICES"
done

# Rebalance (needed to fully enable added nodes)
"$DOCKER" exec "${COUCHBASE_NODE_NAME}_0" couchbase-cli rebalance --cluster ${cluster_url} \
  --username "$COUCHBASE_ADMINISTRATOR_USERNAME" --password "$COUCHBASE_ADMINISTRATOR_PASSWORD" \
  --no-wait
